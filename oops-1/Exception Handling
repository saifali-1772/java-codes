// Exception Handling

class Fraction{
    private int numerator;
    private int denominator;
    
    public Fraction(int numerator, int denominator) throws Exception {
        if(denominator == 0){
            Exception e = new Exception("Denominator cont be 0");
            throw e;
        }
        this.numerator = numerator;
        this.denominator = denominator;
        simplify();
    }
    
    public void setNumerator(int numerator) {
        this.numerator = numerator;
        simplify();
    }
    
    public void setDenominator(int denominator) throws Exception {
        if(denominator == 0) {
            Exception e = new Exception("Denominator cont be 0");
            throw e;
        }
        this.denominator = denominator;
        simplify();
    }
    
    public int getNumerator() {
        return numerator;
    }
    
    public int getDenominator() {
        return denominator;
    }
    
    public void add(Fraction f2) {
        this.numerator = this.numerator*f2.denominator + this.denominator*f2.numerator;
        this.denominator = this.denominator*f2.denominator;
        simplify();
    }
    
    public void mul(Fraction f3) {
        this.numerator = this.numerator*f3.numerator;
        this.denominator = this.denominator*f3.denominator;
        simplify();
    }
    
    public void sub(Fraction f1) {
        this.numerator = this.numerator*f1.denominator - this.denominator*f1.numerator;
        this.denominator = this.denominator*f1.denominator;
        simplify();
    }
    
    public static Fraction add(Fraction f1, Fraction f2) throws Exception {
        int newNum = f1.numerator*f2.denominator + f1.denominator*f2.numerator;
        int newDen = f1.denominator*f2.denominator;
        Fraction f = new Fraction(newNum, newDen);
        return f;
    }
    
    public static Fraction sub(Fraction f1, Fraction f2) throws Exception { 
        int newNum = f1.numerator*f2.denominator - f1.denominator*f2.numerator;
        int newDen = f1.denominator*f2.denominator;
        Fraction f = new Fraction(newNum, newDen);
        return f;
    }
    
    public static Fraction mul(Fraction f1, Fraction f2) throws Exception {
        int newNum = f1.numerator*f2.numerator;
        int newDeno = f1.denominator*f2.denominator;
        Fraction f = new Fraction(newNum, newDeno);
        return f;
    }
    
    private void simplify() {
        int grt = 1;
        int smallNo = Math.min(numerator, denominator);
        for(int i = grt; i <= smallNo; i++) {
            if(numerator % i == 0 && denominator % i == 0) {
                grt = i;
            }
        }
        this.numerator = numerator/grt;
        this.denominator = denominator/grt;
    }
    
    
    public void print() {
        if(denominator == 1) {
            System.out.print(this.numerator);
        } else {
            System.out.print(this.numerator+"/"+this.denominator);
        }
    }
}

class HelloWorld {
    public static void main(String[] args) throws Exception {
        
        
        try {
            Fraction f1 = new Fraction(20,30);
            f1.setDenominator(0);
            f1.print(); //2/3
        } catch(Exception e) {
            System.out.println("Hey don't input 0 as denominator");
        }
        
        
    }
}
